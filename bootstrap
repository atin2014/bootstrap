#!/bin/sh
#
# This script allows you to install openbaton. To execute it:
#
# 'sh <(curl -s http://get.openbaton.org/bootstraps/bootstrap)' [release | nightly | develop]

###############
#### Usage ####
###############

usage () {
    echo "Usage:"
    echo "./bootstrap-main [release | nightly | develop]                                                  (if you already stored locally the 'bootstrap-main' file)"
    echo "sh <(curl -s http://get.openbaton.org/bootstraps/bootstrap) [release | nightly | develop]       (otherwise)"
}

if [ ${#} -gt 1 ]; then
    usage
    exit 1
fi


##########################
#### General Settings ####
##########################

set -e
set -u
#set -x # only for DEBUG

# Make available the functions defined in /lib/lsb/init-functions
. /lib/lsb/init-functions


##########################
#### Global Variables ####
##########################

USER="$(id -un 2>/dev/null || true)"

OPENBATON_BOOTSTRAP_SRC_FUNCTIONS_URL=http://get.openbaton.org/bootstraps/bootstrap-src-functions
OPENBATON_BOOTSTRAP_DEB_FUNCTIONS_URL=http://get.openbaton.org/bootstraps/bootstrap-deb-functions

OPENBATON_PLUGINS_OPENSTACK_URL="http://get.openbaton.org/plugins/1.0.2-liberty/openstack-plugin-1.0.2-liberty.jar"

DEBIAN_FRONTEND_DEFAULT=interactive
DEBIAN_FRONTEND=${DEBIAN_FRONTEND:-$DEBIAN_FRONTEND_DEFAULT}


###############
#### Usage ####
###############

usage () {
    echo "Usage:"
    echo "./bootstrap                                                            (if the script is already locally available)"
    echo "sh <(curl -s http://get.openbaton.org/bootstraps/bootstrap)            (otherwise)"
}


##############################
#### Execution privileges ####
##############################

checkBinary () {
  echo -n " * Checking for '$1' ... "
  if command -v $1 >/dev/null 2>&1; then
     echo "OK"
     return 0
  else
     echo >&2 "FAILED"
     return 1
  fi
}

_ex='sh -c'
if [ "${USER}" != "root" ]; then
    if checkBinary sudo; then
        _ex='sudo -E sh -c'
    elif checkBinary su; then
        _ex='su -c'
    fi
fi


##################
#### Security ####
##################

configureSecurity () {
    # In case of "noninteractive" FRONTEND the default value will remain valid (see in lines below)
    if [ "${DEBIAN_FRONTEND}" = "interactive" ]; then
        read -p "Do you want to enable HTTPS? [N/y]: " https
        export https=${https}
        if [ "${https}" != "" ]; then
            if [ "${https}" = "y" -o "${https}" = "Y" -o "${https}" = "yes" ]; then
                log_success_msg "Enabling HTTPS"
                # server.https = false
                $_ex 'sed -i "s/# server.https = false/server.https = true/g" /etc/openbaton/openbaton.properties'
                # server.port = 8443
                $_ex 'sed -i "s/# server.port = 8443/server.port = 8443/g" /etc/openbaton/openbaton.properties'
                # server.ssl.key-store = /etc/openbaton/keystore.p12
                $_ex 'sed -i -e "s@# server.ssl.key-store = \/etc\/openbaton\/keystore.p12@server.ssl.key-store = \/etc\/openbaton\/keystore.p12@g" /etc/openbaton/openbaton.properties'               
                # server.ssl.key-store-password = password                                                                                                                           
                $_ex 'sed -i "s/# server.ssl.key-store-password = password/server.ssl.key-store-password = password/g" /etc/openbaton/openbaton.properties'
                # server.ssl.keyStoreType = PKCS12                                                 
                $_ex 'sed -i "s/# server.ssl.keyStoreType = PKCS12/server.ssl.keyStoreType = PKCS12/g" /etc/openbaton/openbaton.properties'                
                # server.ssl.keyAlias = tomcat                
                $_ex 'sed -i "s/# server.ssl.keyAlias = tomcat/server.ssl.keyAlias = tomcat/g" /etc/openbaton/openbaton.properties'                                              
            fi                                                                                                                                   
        fi        
    fi
}


###############
#### MySQL ####
###############

configureMySQL () {
    log_success_msg "Configuring MySQL for Open Baton .."        
    $_ex 'sed -i "s/spring.datasource.url=jdbc:hsqldb:file:\/tmp\/openbaton\/openbaton.hsdb/# spring.datasource.url=jdbc:hsqldb:file:\/tmp\/openbaton\/openbaton.hsdb/g" /etc/openbaton/openbaton.properties'        
    $_ex 'sed -i "s/spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver/# spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver/g" /etc/openbaton/openbaton.properties'        
    $_ex 'sed -i "s/spring.jpa.database-platform=org.hibernate.dialect.HSQLDialect/# spring.jpa.database-platform=org.hibernate.dialect.HSQLDialect/g" /etc/openbaton/openbaton.properties'
    $_ex 'sed -i "s/spring.jpa.hibernate.ddl-auto=create-drop/# spring.jpa.hibernate.ddl-auto=create-drop/g" /etc/openbaton/openbaton.properties'        
    $_ex 'sed -i "s/# spring.jpa.hibernate.ddl-auto=update/spring.jpa.hibernate.ddl-auto=update/g" /etc/openbaton/openbaton.properties'
    $_ex 'sed -i "s/# spring.datasource.validationQuery=SELECT 1/spring.datasource.validationQuery=SELECT 1/g" /etc/openbaton/openbaton.properties'
    $_ex 'sed -i "s/# spring.datasource.testOnBorrow=true/spring.datasource.testOnBorrow=true/g" /etc/openbaton/openbaton.properties'
    # Enable MySQL
    $_ex 'sed -i "s/# spring.datasource.url=jdbc:mysql:\/\/localhost:3306\/openbaton/spring.datasource.url=jdbc:mysql:\/\/localhost:3306\/openbaton/g" /etc/openbaton/openbaton.properties'                      
    $_ex 'sed -i "s/# spring.datasource.driver-class-name=com.mysql.jdbc.Driver/spring.datasource.driver-class-name=com.mysql.jdbc.Driver/g" /etc/openbaton/openbaton.properties'
    $_ex 'sed -i "s/# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect/spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect/g" /etc/openbaton/openbaton.properties'
    
    # In case of "noninteractive" FRONTEND the default value will remain valid (sqluser: admin ; sqlpassword: changeme)
    if [ "${DEBIAN_FRONTEND}" = "interactive" ]; then
        read -p "Please, type the name of the mysql user you would like Openbaton to use [admin]: " sqluser
        export dbuser=admin
        export dbpassword=changeme                           
        if [ "${sqluser}" != "" ]; then                                  
            dbuser=${sqluser}                                       
            $_ex 'sed -i "s/spring.datasource.username=admin/spring.datasource.username=${dbuser}/g" /etc/openbaton/openbaton.properties'                             
        fi
        # Turning echo on and off between password reading          
        stty -echo                                                          
        read -p "Please, provide the password for this user [changeme]: " sqlpassword ; echo                  
        stty echo                                                                                            
        if [ "${sqlpassword}" != "" ]; then                 
            dbpassword=${sqlpassword}                                          
            $_ex 'sed -i "s/spring.datasource.password=changeme/spring.datasource.password=${dbpassword}/g" /etc/openbaton/openbaton.properties'                                     
        fi                                                                                                                                                
        # Turning echo on and off between password reading          
        stty -echo                                                          
        read -p "Please, provide the password of the root user of mysql: " rootpasswd ; echo                  
        stty echo                                                                                            
        if [ "${rootpasswd}" = "" ]; then                 
            rootpasswd=changeme                                         
        fi                               
        # Create the Database          
        mysql -uroot -p${rootpasswd} -e "CREATE DATABASE openbaton /*\!40100 DEFAULT CHARACTER SET utf8 */;"                             
        mysql -uroot -p${rootpasswd} -e "CREATE USER ${dbuser}@localhost IDENTIFIED BY '${dbpassword}';"                                                                             
        mysql -uroot -p${rootpasswd} -e "GRANT ALL ON openbaton.* TO '${dbuser}'@'localhost';"        
        mysql -uroot -p${rootpasswd} -e "FLUSH PRIVILEGES;"       
        mysql -uroot -p${rootpasswd} -e "USE openbaton;"                                                           
    fi      
}

installMySQL () {
    read -p "Do you want to enable the persistence through MySQL? [N/y]: " mysql
    if [ "${mysql}" != "" ]; then
        if [ "${mysql}" = "y" -o "${mysql}" = "Y" -o "${mysql}" = "yes" ]; then
            echo " * [INFO] Enabling MySQL Persistence"
            $_ex 'apt-get update'
            $_ex 'apt-get install -y mysql-server'
            configureMySQL
        fi
    else
        echo " * [WARN] NOT Enabling MySQL Persistence"
    fi
}


##############
#### Main ####
##############

main_src () {
    wget "${OPENBATON_BOOTSTRAP_SRC_FUNCTIONS_URL}"
    . ./bootstrap-src-functions
    src_bootstrap
}

main_deb () {
    wget "${OPENBATON_BOOTSTRAP_DEB_FUNCTIONS_URL}"
    . ./bootstrap-deb-functions
    deb_bootstrap ${1}
}

main () {
    echo "Welcome to the Open Baton menu installation."
    echo "Available installation types are the following:"
    echo "    1. develop: it will be downloaded the source code for all the components which will be executed in screens"
    echo "    2. release: it will be installed the binary version of the latest stable version"
    echo "    3. nightly: it will be installed the binary version of the latest nightly build (unstable version)"
    read -p "Select the Open Baton installation type you prefer [2]: " install_type
    case ${install_type} in
        1 ) 
            main_src ;;
        3 ) 
            main_deb unstable;;
        * ) 
            main_deb stable ;;
    esac

    configureSecurity
    log_success_msg "Open Baton installation complete."
}


prereq () {
    $_ex 'apt-get install -y wget'
}

prereq

if [ -n "${1+1}" ]; then
    case ${1} in
        "release" )
            echo " * [INFO] Installing the latest RELEASE package"
            main_deb stable ;;
        "nightly" )
            echo " * [INFO] Installing the latest NIGHTLY-BUILD package"
            main_deb unstable ;;
        "develop" )
            echo " * [INFO] Installing the latest source code"
            main_src ;;
        *)
            usage
            exit 1 ;;
    esac
else
    main
fi

