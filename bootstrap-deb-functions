#!/bin/sh

##########################
#### General Settings ####
##########################

set -e
set -u
#set -x # only for DEBUG

# Make available the functions defined in /lib/lsb/init-functions
. /lib/lsb/init-functions


##########################
#### Global Variables ####
##########################



#############################
#### VIM-Drivers Plugins ####
#############################

deb_installOpenStackVIMPlugin () {
    if [ "${DEBIAN_FRONTEND}" = "interactive" ]; then
        read -p "Do you want to install the OpenStack VIM-Driver Plugin? [Y/n]: " yn                                    
        if [ "${yn}" != "n" -a "${yn}" != "N" ]; then
            log_success_msg "[INFO] Installing the OpenStack VIM-Driver Plugin"
            $_ex 'apt-get install -y openbaton-openstack-vimplugin'
        fi                                                                  
    else
        log_success_msg "[INFO] Installing the OpenStack VIM-Driver Plugin"
        $_ex 'apt-get install -y openbaton-openstack-vimplugin'
    fi                        
}

#installVIMDriverPlugins () {
#    read -p "Do you want to install any of the available VIM-Driver Plugins? [Y/n]: " yn
#    if [ "${yn}" != "n" -a "${yn}" != "N" ]; then
#        echo "Options available are: "
#        echo "    1. Download 'OpenStack' VIM-Driver Plugin"
#        echo "    2. Download 'XYZ' VIM-Driver Plugin"
#        read -p "Insert the number(s) of the plugin(s) you want to install (in case of multiple plugins insert the numbers separated by a space - e.g. 1 2) [no default]: " plugins
#        if [ "${plugins}" = "" ]; then
#            installVIMDriverPlugins
#        else
#            set -- ${plugins} # Create the array for the cycle for
#            for plug in ${@}
#            do
#                case ${plug} in
#                    1 ) installOpenStackVIMPlugin ;;
#                    2 ) installXYZVIMPlugin ;;
#                    * ) installVIMDriverPlugins ;;
#                esac
#            done
#        fi
#    fi
#}



####################
#### Open Baton ####
####################

deb_addRepoRefs () {
    export codename=${1}

    # Add Open Baton Public Key to the APT keys
    $_ex 'wget -O - http://get.openbaton.org/keys/public.gpg.key | apt-key add -'

    # Add Open Baton Repo to sources.list file
    result=$(grep /etc/apt/sources.list -e "deb http://get.openbaton.org/repos/apt/debian/ ${codename} main" | wc -l)
    if [ ${result} -eq 0 ]; then
        $_ex 'echo "\ndeb http://get.openbaton.org/repos/apt/debian/ ${codename} main" >> /etc/apt/sources.list'
    fi
    $_ex 'apt-get update'
}

deb_installNFVO () {
    export codename=${1}

    # Install the correct NFVO package according to the given input parameter
    if [ "${codename}" = "stable" ]; then
        $_ex 'apt-get install -y openbaton-nfvo'
    else
        $_ex 'apt-get install -y openbaton-nfvo-nightly'
    fi    
}

deb_installGVNFM () {
    export codename=${1}

    if [ "${DEBIAN_FRONTEND}" = "interactive" ]; then
        # Ask for Generic VNFM installation 
        read -p "Do you want to install also the Generic VNFM? (if you do not, then you can still install it later with 'sudo apt-get install openbaton-gvnfm') (Y/n): " gvnfm
    
        # Print correct warning message
        if [ "${gvnfm}" = "n" -o "${gvnfm}" = "N" ]; then
            echo " * [WARN] Open Baton Generic VNFM not installed"
            if [ "${codename}" = "stable" ]; then
                echo " * To install the latest release package:"
                echo " *     sudo apt-get install openbaton-gvnfm"
            else
                echo " * To install the latest nightly-build package:"
                echo " *     sudo apt-get install openbaton-gvnfm-nightly"
            fi
            return
        fi
    fi

    # Install the correct Generic VNFM package according to the given input parameter
    if [ "${codename}" = "stable" ]; then
        $_ex 'apt-get install -y openbaton-gvnfm'
    else
        $_ex 'apt-get install -y openbaton-gvnfm-nightly'
    fi
}

deb_restartNFVO () {
    if $_ex 'systemctl restart openbaton-nfvo.service' >/dev/null 2>&1 ; then    
        log_success_msg "Restarting the Open Baton NFVO .."
    elif $_ex 'restart openbaton-nfvo' >/dev/null 2>&1 ; then
        log_success_msg "Restarting the Open Baton NFVO .."
    else                                                        
        log_failure_msg "Restaring the Open Baton NFVO"
    fi
}

deb_restartGVNFM () {
    if $_ex 'systemctl restart openbaton-gvnfm.service' >/dev/null 2>&1 ; then    
        log_success_msg "Restarting the Open Baton GVNFM .."        
    elif $_ex 'restart openbaton-gvnfm' >/dev/null 2>&1 ; then
        log_success_msg "Restarting the Open Baton GVNFM .."        
    else                                                        
        log_failure_msg "Restarting the Open Baton GVNFM"
    fi
}


###################
#### Bootstrap ####
###################

deb_bootstrap () {
    prereq
    deb_addRepoRefs ${1}
    deb_installNFVO ${1}
    deb_installOpenStackVIMPlugin
    deb_installGVNFM ${1}
    installMySQL
    fixJavaSecurity
    configureSecurity
    #########
    # Temporary workaround to avoid the spawning of multiple 'Test VIM Driver Plugin' processes during installation
    log_success_msg "Finalising Open Baton installation .."
    sleep 60
    #########
    deb_restartNFVO
    deb_restartGVNFM
}

